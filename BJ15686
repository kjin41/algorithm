import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class BJ15686 {
// 치킨배달	
	static int[][] chicken;
	static int[][] house;
	static int[] tempCh;
	static int N, M, c, h;
	static int totalMin=1000000;
	
	public static void main(String[] args) throws IOException {
		// System.setIn(new FileInputStream("input15686.txt"));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		chicken = new int[13][2];
		house = new int[2*N][2];
		for (int i=1; i<=N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j=1; j<=N; j++) {
				int n = Integer.parseInt(st.nextToken());
				if (n==1) {
					house[h][0]=i;
					house[h++][1]=j;
				}
				if (n==2) {
					chicken[c][0]=i;
					chicken[c++][1]=j;
				}
			}
		}

		tempCh = new int[M];
		distance(0, 0);
		
		System.out.println(totalMin);
		
	}


	private static void distance(int cnt, int start) {
		if (cnt==M) {
			int total=0;
			for (int i=0; i<h; i++) {	// 한 집에 대해
				int minDis=3*N;
				for (int j=0; j<M; j++)	{	// 치킨집중 가까운거 찾기
					int dis = Math.abs(house[i][0]-chicken[tempCh[j]][0]) + Math.abs(house[i][1]-chicken[tempCh[j]][1]); 
					if (minDis>dis) {
						minDis = dis;
					}
				}
				total += minDis;
			}
			if (totalMin>total) {
				totalMin=total;
			}
			return;
		}
		
		for (int i=start; i<c; i++) {
			tempCh[cnt] = i;
			distance(cnt+1, i+1);
			
		}
	}

}
