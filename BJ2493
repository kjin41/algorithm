import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Stack;
import java.util.StringTokenizer;

public class Main2493 {
// 탑
	public static void main(String[] args) throws NumberFormatException, IOException {
		// System.setIn(new FileInputStream("src\\input2493.txt"));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		int arr[] = new int[N+1];
		int ans[] = new int[N+1];
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		for (int i=1; i<=N; i++) {
			arr[i] = Integer.parseInt(st.nextToken());
		}
		Stack<Integer> stack = new Stack<>();
		Stack<Integer> index = new Stack<>();
		
		for (int i=N; i>1; i--) {
			stack.add(arr[i]);
			index.add(i);
			while(!(stack.isEmpty())) {
				if (arr[i-1] > stack.peek()) {
					ans[index.pop()] = i-1;
					stack.pop();
				} else {
					break;
				}
			}
		}
		
		
		// O(n^2)
//		for (int i=1; i<=N; i++) {			// 현재
//			for (int j=i-1; j>0; j--) {		// 왼쪽에 있는 탑들 가까운 순
//				if (arr[j] > arr[i]) {
//					ans[i] = j;
//					break;
//				}
//			}
//		}
		StringBuilder sb = new StringBuilder();
		
		for (int i=1; i<=N; i++) {
			sb.append(ans[i]);
			sb.append(" ");
//			System.out.printf("%d ", ans[i]);
		}
		System.out.println(sb);

	}

}
