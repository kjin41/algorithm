import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
// 배열 돌리기 4
	static boolean[] isSeleted;
	static int N;
	static int M;
	static int K;
	static int min = 10000;
	static int[] temp;
	static int[][] arr;
	static int[][] rotArr;
	static int[][] rot;
	
	public static void main(String[] args) throws IOException {
		System.setIn(new FileInputStream("input17406.txt"));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		isSeleted = new boolean[K];
		temp = new int[K];
		arr = new int[N+1][M+1];
		rotArr = new int[N+1][M+1];
		for (int i=1; i<=N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j=1; j<=M; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}
	
		rot = new int[K][3];
		for (int i=0; i<K; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j=0; j<3; j++) {
				rot[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		permutate(0);
		System.out.println(min);
		
		
	}

	private static void permutate(int cnt) {
		if (cnt == K) {
			for (int i=1; i<=N; i++) {
				for (int j=1; j<=M; j++) {
					rotArr[i][j] = arr[i][j];
				}
			}
			for (int i=0; i<K; i++) {
				rotate(rot[temp[i]][0]-rot[temp[i]][2], rot[temp[i]][1]-rot[temp[i]][2], rot[temp[i]][2]);
			}
			for (int i=1; i<=N; i++) {
				int row = 0;
				for (int j=1; j<=M; j++) {
					row += rotArr[i][j];
				}
				if (min > row) {
					min = row;
				}
			}
			return;
		}
		
		for (int i=0; i<K; i++) {
			if (isSeleted[i]) {
				continue;
			}
			temp[cnt] = i;
			isSeleted[i] = true;
			permutate(cnt+1);
			isSeleted[i] = false;
		}
	}
	
	private static void rotate(int r, int c, int s) {
		if (s<1) {
			return;
		}
		int first = rotArr[r][c];
		int i=0;

		for (i=r; i<r+2*s; i++) {
			rotArr[i][c] = rotArr[i+1][c];
		}
		r = i;
		
		for (i=c; i<c+2*s; i++) {
			rotArr[r][i] = rotArr[r][i+1];
		}
		c = i;

		for (i=r; i>r-2*s; i--) {
			rotArr[i][c] = rotArr[i-1][c];
		}
		r = i;
		
		for (i=c; i>c-2*s+1; i--) {
			rotArr[r][i] = rotArr[r][i-1];
		}
		c = i;
		
		rotArr[r][c] = first;
		rotate(r+1, c, s-1);
	}
}
